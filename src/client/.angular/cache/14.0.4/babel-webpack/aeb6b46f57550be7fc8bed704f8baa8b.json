{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.username = '';\n      document.addEventListener('contextmenu', function (e) {\n        e.preventDefault();\n      });\n    }\n\n    resetUsername() {\n      this.username = '';\n    }\n\n    isEmpty() {\n      return this.username.length === 0;\n    }\n\n    handleKeyboardEvent(e) {\n      console.log(e);\n      this.logggg = e.key;\n      /*if (e.key === 'F12') {\r\n        e.preventDefault();\r\n        return false;\r\n      }\r\n      if (e.ctrlKey && e.shiftKey && e.key === \"I\") {\r\n        return false;\r\n      }\r\n      if (e.ctrlKey && e.shiftKey && e.key === \"C\") {\r\n        return false;\r\n      }\r\n      if (e.ctrlKey && e.shiftKey && e.key === \"J\") {\r\n        return false;\r\n      }\r\n      if (e.ctrlKey && e.key == \"U\") {\r\n        return false;\r\n      }\r\n      return true;*/\n    }\n    /*@HostListener('document:keydown', ['$event'])\r\n    onKeyUp(ev:KeyboardEvent) {\r\n      //console.log(`The user just pressed ${ev.key}!`);\r\n    }*/\n\n\n    visibilitychange(ev) {\n      if (document.hidden) {\n        console.log(`LOG_1_HIDDEN`);\n      } else {\n        console.log(`LOG_2_NOT_HIDDEN`);\n      }\n    }\n\n    onMouseLeave(ev) {\n      ev = ev ? ev : window.event;\n      var from = ev.relatedTarget || ev.toElement;\n\n      if (!from || from.nodeName == \"HTML\") {\n        console.log(`LOG_3_MOUSE_MOVE`);\n      }\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-component\"]],\n    hostBindings: function AppComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function AppComponent_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyboardEvent($event);\n        }, false, i0.ɵɵresolveDocument)(\"visibilitychange\", function AppComponent_visibilitychange_HostBindingHandler($event) {\n          return ctx.visibilitychange($event);\n        }, false, i0.ɵɵresolveDocument)(\"mouseleave\", function AppComponent_mouseleave_HostBindingHandler($event) {\n          return ctx.onMouseLeave($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    decls: 7,\n    vars: 4,\n    consts: [[\"type\", \"text\", \"placeholder\", \"Enter username\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"disabled\", \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_0_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"p\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_3_listener() {\n          return ctx.resetUsername();\n        });\n        i0.ɵɵtext(4, \"Reset Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h1\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.username);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.isEmpty());\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.logggg);\n      }\n    },\n    dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    styles: [\"input[_ngcontent-%COMP%]{width:200px}p[_ngcontent-%COMP%]{padding-top:20px;padding-bottom:20px}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}